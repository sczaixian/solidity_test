const { getNamedAccounts, deployments, network } = require("hardhat")
const { devlopmentChains, networkConfig, CONFIRMATIONS } = require("../helper-hardhat-config")
dfsfds
module.exports = async({getNamedAccounts, deployments}) => {
    console.log(`network is ${network.name}`)



    const firstAccount = (await getNamedAccounts()).firstAccount
    const { deploy } = deployments


    let confirmations
    if(devlopmentChains.includes(network.name)){
        const mockV3Aggregator = await deployments.get("MockV3Aggregator")   
        dataFeedAddr = mockV3Aggregator.address
        confirmations = 0
    } else {
        dataFeedAddr = networkConfig[network.config.chainId].ethUsdDataFeed
        confirmations = CONFIRMATIONS
    }



    const mtkd = await deploy("MyToken", {
        from: firstAccount,
        args:[],
        log: true,
        waitConfirmations: confirmations
    })

   

    if(hre.network.config.chainId == 11155111 && process.env.ETHERSCAN_API_KEY){
        await hre.run("verify:verify", {
            address: mtkd.address,
            contract: "contracts/MyToken.sol:MyToken", // 添加这一行 确定验证合约（发生冲突时）
            constructorArguments: []
        })
    } else {
        console.log("verification skipped...")
    }
}

module.exports.tags = ["all", "mytoken"]


// PS D:\web3_porjs\solidity_test\dapp_task\task1> npx hardhat --network sepolia deploy
// [dotenv@17.2.2] injecting env (6) from .env -- tip: ⚙️  specify custom .env file path with { path: '/custom/path/.env' }
// Nothing to compile
// network name is sepolia
// skip mock ...
// network is sepolia
// reusing "MyToken" at 0xCD3687D8E6c6002eA92B39842BD436A8BBb62e38
// Successfully submitted source code for contract
// contracts/MyToken.sol:MyToken at 0xCD3687D8E6c6002eA92B39842BD436A8BBb62e38
// for verification on the block explorer. Waiting for verification result...

// Successfully verified contract MyToken on the block explorer.
// https://sepolia.etherscan.io/address/0xCD3687D8E6c6002eA92B39842BD436A8BBb62e38#code